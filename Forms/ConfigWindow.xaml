<Window x:Class="PornPaster.Forms.ConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PornPaster.Forms"
        xmlns:sys="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
        mc:Ignorable="d"
        Title="PornPaster Configuration" Height="480" Width="500"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Background="#FF1E1E1E"
        WindowStyle="None"
        AllowsTransparency="True">
    
    <Window.Resources>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="#FFE0E0E0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="#FF2D2D2D"/>
            <Setter Property="Foreground" Value="#FFE0E0E0"/>
            <Setter Property="BorderBrush" Value="#FF3E3E3E"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" 
                                        Grid.Column="2" 
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="0,0,0,0">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Path x:Name="Arrow" 
                                                      Fill="{TemplateBinding Foreground}"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      Margin="0,0,5,0"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite" 
                                            IsHitTestVisible="False" 
                                            Content="{TemplateBinding SelectionBoxItem}" 
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                            Margin="3,3,23,3" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox" 
                                    Style="{x:Null}" 
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Center" 
                                    Margin="3,3,23,3" 
                                    Focusable="True" 
                                    Background="Transparent" 
                                    Visibility="Hidden" 
                                    IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup x:Name="Popup" 
                                   Placement="Bottom" 
                                   IsOpen="{TemplateBinding IsDropDownOpen}" 
                                   AllowsTransparency="True" 
                                   Focusable="False" 
                                   PopupAnimation="None">
                                <Grid x:Name="DropDown" 
                                      SnapsToDevicePixels="True" 
                                      MinWidth="{TemplateBinding ActualWidth}" 
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" 
                                            Background="#FF2D2D2D" 
                                            BorderThickness="1" 
                                            BorderBrush="#FF3E3E3E"/>
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" 
                                                   KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#FF2D2D2D"/>
            <Setter Property="Foreground" Value="#FFE0E0E0"/>
            <Setter Property="BorderBrush" Value="#FF3E3E3E"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5,0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#FF007ACC"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#FF007ACC"/>
                    <Setter Property="Background" Value="#FF363636"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="Button">
            <Setter Property="Background" Value="#FF007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF0099FF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF006BB3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FF4D4D4D"/>
                                <Setter Property="Foreground" Value="#FF999999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FFE0E0E0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF4D4D4D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="#FFE0E0E0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid x:Name="templateRoot" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" 
                                    Background="#FF2D2D2D"
                                    BorderBrush="#FF3E3E3E"
                                    BorderThickness="1"
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,4,0">
                                <Viewbox Width="12" Height="12">
                                    <Path x:Name="checkMark"
                                          Data="M 0,5 L 3,8 L 8,2"
                                          Stroke="#FF007ACC"
                                          StrokeThickness="1.5"
                                          StrokeStartLineCap="Round"
                                          StrokeEndLineCap="Round"
                                          Visibility="Collapsed"/>
                                </Viewbox>
                            </Border>
                            <ContentPresenter Grid.Column="1" 
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Content}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="#FF363636"/>
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#FF007ACC"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#FF007ACC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="ListBox">
            <Setter Property="Background" Value="#FF2D2D2D"/>
            <Setter Property="Foreground" Value="#FFE0E0E0"/>
            <Setter Property="BorderBrush" Value="#FF3E3E3E"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#FF007ACC"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#FF007ACC"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="ListBoxItem">
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF007ACC"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF3E3E3E"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <DockPanel LastChildFill="True">
        <!-- Title Bar -->
        <Grid DockPanel.Dock="Top" Height="32" Background="#FF2D2D2D" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Text="PornPaster Configuration" 
                       Foreground="#FFE0E0E0" 
                       VerticalAlignment="Center" 
                       Margin="12,0,0,0"/>
            
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button x:Name="MinimizeButton" 
                        Style="{StaticResource TitleBarButtonStyle}"
                        Width="46" 
                        Height="32" 
                        Click="MinimizeButton_Click">
                    <TextBlock Text="─" 
                               Foreground="#FFE0E0E0" 
                               FontSize="16" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center"/>
                </Button>
                <Button x:Name="CloseButton" 
                        Style="{StaticResource TitleBarButtonStyle}"
                        Width="46" 
                        Height="32" 
                        Click="CloseButton_Click">
                    <TextBlock Text="✕" 
                               Foreground="#FFE0E0E0" 
                               FontSize="16" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center"/>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Footer -->
        <Grid DockPanel.Dock="Bottom" Height="48" Background="#FF2D2D2D">
            <Button x:Name="SaveButton" Content="Save" Click="SaveButton_Click" 
                    Background="#FF007ACC" BorderThickness="0" 
                    HorizontalAlignment="Right" VerticalAlignment="Center"
                    Margin="0,0,12,0" Padding="24,6"/>
        </Grid>

        <!-- Main Content -->
        <Grid Margin="12,8,12,8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="140"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Hotkey Selection -->
            <Label Grid.Row="0" Grid.Column="0" Content="Select Hotkey:"/>
            <ComboBox x:Name="HotkeySelectorComboBox" 
                     Grid.Row="0" 
                     Grid.Column="1" 
                     Margin="0,0,8,0"
                     SelectionChanged="HotkeySelectorComboBox_SelectionChanged"/>
            <Button x:Name="AddHotkeyButton" Grid.Row="0" Grid.Column="2" Content="Add Hotkey" Margin="0,0,8,0" Click="AddHotkeyButton_Click"/>
            <Button x:Name="RemoveHotkeyButton" Grid.Row="0" Grid.Column="3" Content="Remove" Click="RemoveHotkeyButton_Click"/>

            <!-- Hotkey Name -->
            <Label Grid.Row="2" Grid.Column="0" Content="Hotkey Name:"/>
            <TextBox x:Name="HotkeyNameTextBox" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" TextChanged="HotkeyNameTextBox_TextChanged"/>

            <!-- Hotkey Key -->
            <Label Grid.Row="4" Grid.Column="0" Content="Key:"/>
            <ComboBox x:Name="HotkeyComboBox" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3" SelectionChanged="HotkeyComboBox_SelectionChanged"/>

            <!-- Folder List -->
            <ListBox x:Name="FolderListBox" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="4" SelectionMode="Single"/>

            <!-- Folder Buttons -->
            <StackPanel Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="4" Orientation="Horizontal" HorizontalAlignment="Left">
                <Button x:Name="AddButton" Content="Add Folder" Click="AddButton_Click" Margin="0,0,8,0"/>
                <Button x:Name="RemoveButton" Content="Remove" Click="RemoveButton_Click"/>
            </StackPanel>

            <!-- Options -->
            <Grid Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <CheckBox x:Name="SearchSubdirectoriesCheckBox" Grid.Column="0" Content="Search Subdirectories" 
                          Checked="SearchSubdirectoriesCheckBox_Checked" Unchecked="SearchSubdirectoriesCheckBox_Unchecked"/>
                <CheckBox x:Name="AutoPasteCheckBox" Grid.Column="1" Content="Auto Paste" 
                          Checked="AutoPasteCheckBox_Checked" Unchecked="AutoPasteCheckBox_Unchecked"/>
            </Grid>

            <CheckBox x:Name="AutoSendCheckBox" Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="4" Content="Auto Send (Press Enter)" 
                      Checked="AutoSendCheckBox_Checked" Unchecked="AutoSendCheckBox_Unchecked">
                <CheckBox.Style>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Grid.ColumnSpan" Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>
            <StackPanel Grid.Row="12" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=AutoSendCheckBox}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Delay (ms):" VerticalAlignment="Center" Margin="8,0,4,0"/>
                <TextBox x:Name="AutoSendDelayTextBox" Width="60" TextChanged="AutoSendDelayTextBox_TextChanged"/>
            </StackPanel>

            <!-- Folder Selection Mode -->
            <DockPanel Grid.Row="14" Grid.Column="0" Grid.ColumnSpan="4" LastChildFill="True">
                <Label Content="Folder Selection Mode:" DockPanel.Dock="Left" Foreground="#FFE0E0E0" VerticalAlignment="Center"/>
                <ComboBox x:Name="FolderSelectionModeComboBox" Margin="8,0,0,0" SelectionChanged="FolderSelectionModeComboBox_SelectionChanged"/>
            </DockPanel>
        </Grid>
    </DockPanel>
</Window> 