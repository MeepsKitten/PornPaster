name: Build and Release

on:
  workflow_dispatch:
    inputs:
      description: 'Optional description for the manual trigger'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Setup WiX
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" -OutFile "wix.zip"
        Expand-Archive -Path "wix.zip" -DestinationPath "wix"
        $wixPath = Join-Path -Path $pwd -ChildPath "wix"
        echo "$wixPath" >> $env:GITHUB_PATH
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Publish
      run: dotnet publish -c Release -o publish --no-build
      
    - name: Build Installer
      shell: pwsh
      run: |
        $wixPath = Join-Path -Path $pwd -ChildPath "wix"
        $env:Path = "$wixPath;" + $env:Path
        
        # Build the installer
        & "$wixPath\candle.exe" -ext WixUtilExtension -dBinDir="$pwd\publish" -dProjectDir="$pwd" "PornPaster.Installer\Product.wxs" -out "installer.wixobj"
        if ($LASTEXITCODE -ne 0) { throw "Candle.exe failed" }
        
        & "$wixPath\light.exe" -ext WixUtilExtension -ext WixUIExtension "installer.wixobj" -out "PornPaster_Setup.msi"
        if ($LASTEXITCODE -ne 0) { throw "Light.exe failed" }
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.0-${{ github.run_number }}
        name: Release v1.0.0-${{ github.run_number }}
        files: PornPaster_Setup.msi
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} 